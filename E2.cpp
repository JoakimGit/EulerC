/*
 * Project Euler problem 2
 * 
 * Each new term in the Fibonacci sequence is generated by
 * adding the previous two terms. By starting with 1 and 2,
 * the first 10 terms will be:
 *	1, 2, 3, 4, 5, 8, 13, 21, 34, 55, 89, ...
 * By considering the terms in the Fibonacci sequence whose
 * values do not exceed four million, find the sum of
 * even valued terms.
 *
 */

#include <stdio.h>
#include <vector>

/* Function declaration */
std::vector<int> fibonacci(int);

/* Main */
int main(void)
{
	int sum = 0;
	std::vector<int> fib = fibonacci(4000000);
	std::vector<int>::iterator it;
	
	for (it=fib.begin(); it<fib.end(); ++it) {
		if (*it % 2 == 0) 
			sum += *it;
	}
	
	printf("Fibonnaci even sum: %d\n", sum);

}


/*
 * Returns a vector of fibonacci numbers lower than capacity
 */
std::vector<int> fibonacci(int capacity)
{
	int low = 1;
	int high = 2;
	int tmp;

	std::vector<int> fib = {low};

	while (high <= capacity) {
		fib.push_back(high);
		tmp = high;
		high += low;
		low = tmp;
	}
	return fib;
}
